{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","message","getPressedKey","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,QAAS,2BAFb,EAaEC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEH,QAAQ,4BAAD,OAA8BE,EAAME,IAApC,QAd3B,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,iBAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,iBAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKR,MAAMC,gBArBtB,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.06118d70.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  message: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    message: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.getPressedKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.getPressedKey);\n  }\n\n  getPressedKey = (event: KeyboardEvent) => {\n    this.setState({ message: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.message}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}